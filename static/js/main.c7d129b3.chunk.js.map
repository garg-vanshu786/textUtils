{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","e","preventDefault","capital","i","length","slice","joinedWords","reverse","Alert","alert","msg","defaultProps","aboutText","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","setInterval","key","Date","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.c7d129b3.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import {Link} from \"react-router-dom\";\r\n\r\n\r\nexport default function navbar(props) {\r\n  return (\r\n    <div>\r\n       <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n     <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\r\n            </li> */}\r\n            {/* <li className=\"nav-item dropdown\">\r\n            <a className=\"nav-link dropdown-toggle\" href=\"/\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                Dropdown\r\n            </a>\r\n            <ul className=\"dropdown-menu\">\r\n            \r\n            </ul>\r\n            </li> */}\r\n          \r\n        </ul>\r\n        {/* <form className=\"d-flex\" role=\"search\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n            <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n        </form> */}\r\n        <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n    </div>\r\n    </div>\r\n    </nav>\r\n    </div>\r\n\r\n  \r\n  )\r\n}\r\n\r\nnavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired  \r\n}\r\n\r\nnavbar.defaultProps = {\r\n    title: 'write the title',\r\n    aboutText: 'About'  \r\n}\r\n\r\n","import React, {useState} from 'react'\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUPClick = ()=>{\r\n        // console.log(\"Upper Case Was Clicled\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to UpperCase\",\"success\");\r\n    }\r\n\r\n    const handleLowClick = ()=>{\r\n        // console.log(\"Upper Case Was Clicled\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to LowerCase\",\"success\");\r\n    }\r\n\r\n    const handleclearClick = ()=>{\r\n        // console.log(\"Upper Case Was Clicled\" + text);\r\n        let newText = '';\r\n        setText(newText);\r\n        props.showAlert(\"Text Cleared\",\"success\");\r\n    }\r\n\r\n    const handleCopy = ()=>{\r\n        // console.log(\"i am copy\");\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied\",\"success\");\r\n    }\r\n\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces removed\", \"success\");\r\n    }\r\n\r\n\r\n    const Capitalize1st=(e)=>{\r\n      e.preventDefault();\r\n        let capital=text.split(\" \");\r\n        for(let i=0;i<capital.length;i++){\r\n          capital[i]=capital[i][0].toUpperCase() + capital[i].slice(1);\r\n        }\r\n        setText(capital.join(\" \"));\r\n        props.showAlert(\"Capitalized First Letter\", \"success\");\r\n    }\r\n\r\n\r\n    \r\n      const reversed = () => {\r\n        let splitWord = text.split(\"\");\r\n    \r\n        let reverseWord = splitWord.reverse(\"\");\r\n        let joinedWords = reverseWord.join(\"\");\r\n        let newText = joinedWords\r\n    \r\n        setText(newText);\r\n        props.showAlert(\"Text Reveresed\", \"success\");\r\n      };\r\n    \r\n\r\n    \r\n\r\n\r\n    const handleOnChange = (event)=>{\r\n        // console.log(\"On Change\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n  \r\n\r\n    const [text, setText] = useState('');\r\n    //  text= \"new Text\";  //wrong way\r\n    //  setText(\"new txt\"); //correct way\r\n  return (\r\n\r\n    <>\r\n  <div className=\"container\" style= {{color : props.mode === 'dark'?'white':'#042743'}}>\r\n    <h1 >{props.heading} </h1>\r\n    <div className=\"mb-3\">\r\n    {/* <label for=\"myBox\" className=\"form-label\">Example textarea</label> */}\r\n    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style= {{backgroundColor : props.mode === 'dark'?'grey':'white',color : props.mode === 'dark'?'white':'#042743'}} id=\"myBox\" rows=\"9\"></textarea>\r\n    </div>\r\n    <button className=\"btn btn-primary btn-lg btn-bloc mx-2\" onClick={handleUPClick}>Convert to Upper Case</button>\r\n    <button className=\"btn btn-primary btn-lg btn-bloc mx-2\" onClick={handleLowClick}>Convert to Lower Case</button>\r\n    <button className=\"btn btn-primary btn-lg btn-bloc mx-2\" onClick={handleclearClick}>Clear Text</button>\r\n    <button className=\"btn btn-primary btn-lg btn-bloc mx-2\" onClick={handleCopy}>Copy Text To Clipboard</button>\r\n    <button className=\"btn btn-primary btn-lg btn-bloc mx-2\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n    <button className=\"btn btn-primary btn-lg btn-bloc mx-2\" onClick={Capitalize1st}>Capitalize first Letter</button>\r\n    <button className=\"btn btn-primary btn-lg btn-bloc my-2 mx-2\" onClick={reversed}>Reverse Text</button>\r\n\r\n\r\n\r\n</div>\r\n<div className=\"container my-3\" style= {{color : props.mode === 'dark'?'white':'#042743'}}>\r\n    <h2>Your Text summary</h2>\r\n    <p>{text.split(\" \").length} words,{text.length} characters</p>\r\n    <p>{0.008 *text.split(\" \").length } Minutes read</p>\r\n    <h2>Preview</h2>\r\n    <p>{text.length>0?text:\"Enter Your Text To Preview\"}</p>\r\n</div>\r\n</>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n  const capitalize = (word)=>{\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }\r\n  return (\r\n    \r\n    \r\n   ( props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n   {/* <svg class=\"bi flex-shrink-0 me-2\" role=\"img\" aria-label=\"Info:\"><use xlink:href=\"#info-fill\"/></svg> */}\r\n    <strong> {(props.alert.type)}</strong>:  {props.alert.msg}\r\n   \r\n  {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n  </div>)\r\n  \r\n\r\n  )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useContext, useState } from 'react'\nimport Alert from './components/Alert';\n// import About from './components/About'\n// import {\n//   BrowserRouter ,\n//   Routes,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [ mode, setMode] = useState('light'); //whether mode enabled or not\n  const [ alert, setAlert] = useState(null);\n\n  const showAlert =(message, type )=>{\n     setAlert({\n        msg: message, //we can write  also message = message\n        type: type\n     })\n\n     setTimeout(() => {\n        setAlert(null);\n     }, 1500);\n  }\n\n  const toggleMode = () =>{\n    if(mode === 'light'){    \n    setMode('dark');\n    document.body.style.backgroundColor = '#042743';\n    showAlert(\"Dark Mode has been enabled\", \"success\");\n    document.title ='TextUtils - Dark Mode';\n      setInterval(() => {\n        document.title ='TextUtils - Amazing';\n      }, 2000);\n      // setInterval(() => {\n      //   document.title ='TextUtils One stop Solution';\n      // }, 1700);\n    }\n\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n     showAlert(\"Light Mode has been enabled\", \"success\");\n     document.title ='TextUtils - Light Mode';\n     setInterval(() => {\n      document.title ='TextUtils - Amazing';\n    }, 2000);\n    // setInterval(() => {\n    //   document.title ='TextUtils One stop Solution';\n    // }, 1700);\n    }\n  }\n  return (\n    <>\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} key={new Date()} />\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n      \n    \n   \n\n    <TextForm showAlert={showAlert} heading=\"Try TextUtils - word counter, character counter, remove extra spaces\" mode={mode}/>\n    </div>\n    </>\n  ); \n} \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}